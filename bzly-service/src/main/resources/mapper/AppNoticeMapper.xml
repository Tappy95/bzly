<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mc.bzly.dao.news.AppNewsNoticeDao">
	<resultMap id="BaseResultMap" type="AppNewsNotice">
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="notice_type" property="noticeType" jdbcType="INTEGER"/>
		<result column="notice_title" property="noticeTitle" jdbcType="VARCHAR"/>
		<result column="notice_content" property="noticeContent" jdbcType="VARCHAR"/>
		<result column="img_url" property="imgUrl" jdbcType="VARCHAR"/>
		<result column="link_address" property="linkAddress" jdbcType="VARCHAR"/>
		<result column="ranges" property="ranges" jdbcType="INTEGER"/>
		<result column="releaser_time" property="releaserTime" jdbcType="INTEGER"/>
		<result column="cancel_time" property="cancelTime" jdbcType="INTEGER"/>
		<result column="creater_time" property="createrTime" jdbcType="INTEGER"/>
		<result column="creater_mobile" property="createrMobile" jdbcType="VARCHAR"/>
		<result column="creater_name" property="createrName" jdbcType="VARCHAR"/>
		<result column="is_release" property="isRelease" jdbcType="INTEGER"/>
		<result column="is_publish" property="isPublish" jdbcType="INTEGER"/>
		<result column="isRead" property="isRead" javaType="INTEGER"/>
		<result column="app_type" property="appType" javaType="INTEGER"/>
	</resultMap>
	
	<insert id="saveNotice" parameterType="AppNewsNotice">
	   INSERT INTO app_news_notice(notice_type,notice_title,notice_content,img_url,link_address,ranges,releaser_time,cancel_time,creater_time,creater_mobile,is_release,is_publish,app_type)
       VALUES (#{noticeType},#{noticeTitle},#{noticeContent},#{imgUrl},#{linkAddress},#{ranges},#{releaserTime},#{cancelTime},#{createrTime},#{createrMobile},#{isRelease},#{isPublish},#{appType})
	</insert>
	
	<select id="selectList" parameterType="AppNewsNotice" resultMap="BaseResultMap">
	   select *,(SELECT realname FROM p_admin WHERE mobile=creater_mobile) AS creater_name
	   from app_news_notice
	   <where>
			<if test="noticeTitle != null and noticeTitle != ''">
				and notice_title=#{noticeTitle}
			</if>
			<if test="isRelease != null and isRelease != ''">
				and is_release=#{isRelease}
			</if>
		</where>
		order by creater_time desc 
	</select>
	
	<select id="selectAppList" parameterType="AppNewsNotice" resultMap="BaseResultMap">
	    SELECT n.*,
		CASE IFNULL((SELECT notice_id FROM app_notice_user WHERE notice_id=n.id AND user_id=#{userId}),0)
		WHEN 0 THEN 1
		ELSE 2
		END isRead
		FROM app_news_notice n
		WHERE n.notice_type!=2 AND n.is_release=1 AND n.is_publish=1 AND n.app_type=#{appType}
		ORDER BY n.creater_time DESC
	</select>
	
	<select id="selectId" resultMap="BaseResultMap">
	   select *
	   from app_news_notice 
	   where id=#{id}
	</select>
	
	<update id="updateNotice" parameterType="AppNewsNotice">
	    update app_news_notice 
		<set>
		    <if test="noticeType != null">
				notice_type = #{noticeType},
			</if>
			<if test="noticeTitle != null">
				notice_title = #{noticeTitle},
			</if>
			<if test="noticeContent != null">
				notice_content = #{noticeContent},
			</if>
			<if test="imgUrl != null">
				img_url = #{imgUrl},
			</if>
			<if test="linkAddress != null">
				link_address = #{linkAddress},
			</if>
			<if test="ranges != null">
				ranges = #{ranges},
			</if>
			<if test="releaserTime != null">
				releaser_time = #{releaserTime},
			</if>
			<if test="cancelTime != null">
				cancel_time = #{cancelTime},
			</if>
			<if test="createrTime != null">
				creater_time = #{createrTime},
			</if>
			<if test="isRelease != null">
				is_release = #{isRelease},
			</if>
			<if test="isPublish != null">
				is_publish = #{isPublish},
			</if>
			<if test="appType != null">
				app_type = #{appType}
			</if>
		</set> 
		where id = #{id}
	</update>
	
	<delete id="deleteNotice">
	  delete from app_news_notice where id = #{id}
	</delete>
	
	<select id="selectOne" parameterType="long" resultMap="BaseResultMap">
	  select *
	  from app_news_notice
	  where is_release=1 and is_publish=1 and notice_type in (1,2)
	  <![CDATA[
		and #{currentime}>releaser_time and #{currentime}<cancel_time
	  ]]>
	  order by creater_time desc
	  limit 0,1
	</select>
	
	<select id="selectIsReadCount" parameterType="String" resultType="int">
	   SELECT count(*)
	   FROM app_news_notice
	   WHERE notice_type!=2 AND is_release=1 AND is_publish=1 AND id NOT IN (
		  SELECT notice_id
		  FROM app_notice_user
		  WHERE user_id=#{userId}
	   )
	</select>
	
	<select id="selectReadList" parameterType="String" resultMap="BaseResultMap">
	    SELECT *
		FROM app_news_notice
		WHERE notice_type!=2 AND is_release=1 AND is_publish=1 AND id NOT IN (
		  SELECT notice_id
		  FROM app_notice_user
		  WHERE user_id=#{userId}
		)
		ORDER BY creater_time DESC 
	</select>
	
	<select id="selectOneNews" resultMap="BaseResultMap">
	  select *
	  from app_news_notice
	  where app_type=#{appType} and is_release=1 and is_publish=1 and notice_type in (1,2)
	  <![CDATA[
		and #{currentime}>releaser_time and #{currentime}<cancel_time
	  ]]>
	  order by creater_time desc
	  limit 0,1
	</select>
</mapper>