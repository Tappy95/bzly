<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mc.bzly.dao.user.LUserExchangeCashDao" >
	<resultMap type="LUserExchangeCash" id="BaseResultMap">
		<result column="id" property="id" jdbcType="INTEGER"/>		
		<result column="coin_change_id" property="coinChangeId" jdbcType="INTEGER"/>		
		<result column="user_id" property="userId" jdbcType="VARCHAR"/>				
		<result column="out_trade_no" property="outTradeNo" jdbcType="VARCHAR"/>				
		<result column="coin" property="coin" jdbcType="INTEGER"/>		
		<result column="actual_amount" property="actualAmount" jdbcType="DECIMAL"/>		
		<result column="service_charge" property="serviceCharge" jdbcType="DECIMAL"/>
		<result column="coin_to_money" property="coinToMoney" jdbcType="INTEGER"/>
		<result column="creator_time" property="creatorTime" jdbcType="INTEGER"/>			
		<result column="operator_mobile" property="operatorMobile" jdbcType="VARCHAR"/>	
		<result column="examine_time" property="examineTime" jdbcType="INTEGER"/>	
		<result column="remarks" property="remarks" jdbcType="INTEGER"/>	
		<result column="state" property="state" jdbcType="INTEGER"/>
		<result column="locking_mobile" property="lockingMobile" jdbcType="VARCHAR"/>
		<result column="is_locking" property="isLocking" jdbcType="INTEGER"/>
		<result column="locking" property="locking" jdbcType="INTEGER"/>
		<result column="coin_balance" property="coinBalance" jdbcType="INTEGER"/>
		<result column="bank_account" property="bankAccount" jdbcType="VARCHAR"/>
		<result column="real_name" property="realName" jdbcType="VARCHAR"/>
		<result column="user_ip" property="userIp" jdbcType="VARCHAR"/>
		<result column="registerTime" property="registerTime" jdbcType="INTEGER"/>
		<result column="cash_type" property="cashType" jdbcType="INTEGER"/>
		
		<result column="account_id" property="accountId" jdbcType="INTEGER"/>
		<result column="channel_code" property="channelCode" jdbcType="VARCHAR"/>	
		<result column="bankName" property="bankName" jdbcType="VARCHAR"/>	
		<result column="bankNum" property="bankNum" jdbcType="VARCHAR"/>	
		<result column="user_name" property="userName" jdbcType="VARCHAR"/>	
		<result column="operatorName" property="operatorName" jdbcType="VARCHAR"/>	
		<result column="stateName" property="stateName" jdbcType="VARCHAR"/>	
		<result column="creatorDate" property="creatorDate" jdbcType="VARCHAR"/>
		<result column="examineDate" property="examineDate" jdbcType="VARCHAR"/>
		<result column="registerDate" property="registerDate" jdbcType="VARCHAR"/>
	</resultMap>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="LUserExchangeCash">
		INSERT INTO l_user_exchange_cash(coin_change_id,user_id,out_trade_no,bank_account,real_name,coin,actual_amount,service_charge,coin_balance,coin_to_money,creator_time,operator_mobile,examine_time,remarks,state,locking_mobile,is_locking,user_ip,cash_type)
        VALUE (#{coinChangeId},#{userId},#{outTradeNo},#{bankAccount},#{realName},#{coin},#{actualAmount},#{serviceCharge},#{coinBalance},#{coinToMoney},#{creatorTime},#{operatorMobile},#{examineTime},#{remarks},#{state},#{lockingMobile},#{isLocking},#{userIp},#{cashType})
	</insert>

	<update id="update">
	    update l_user_exchange_cash
	    <set>
			<if test="operatorMobile != null">
				operator_mobile  = #{operatorMobile},				
			</if>
			<if test="examineTime != null">
				examine_time  = #{examineTime},				
			</if>
			<if test="isLocking != null">
				is_locking  = #{isLocking},				
			</if>
			<if test="remarks != null">
				remarks  = #{remarks},				
			</if>
			<if test="state != null">
				state  = #{state}				
			</if>
		</set>
		where id=#{id}
	</update>
	
	<select id="selectList" parameterType="LUserExchangeCash" resultMap="BaseResultMap">
		  SELECT e.*,u.user_name,u.channel_code,u.account_id,u.coin as coinBalance,
	      CASE c.account_type
	      WHEN 1 THEN '微信'
	      WHEN 2 THEN '支付宝'
	      END bankName,
	      CASE c.account_type
	      WHEN 1 THEN u.open_id
	      WHEN 2 THEN u.ali_num
	      END bankNum,
	      CASE e.operator_mobile
	      WHEN 1 THEN '系统'
	      ELSE (SELECT realname FROM p_admin WHERE mobile=e.operator_mobile)
	      END operatorName,
	      CASE IFNULL(e.locking_mobile,0)
	      WHEN 0 THEN 1
	      WHEN #{admin} THEN 2
	      ELSE 3
	      END locking,
	      (SELECT realname FROM p_admin WHERE mobile=e.locking_mobile) AS admin,
	      u.create_time as registerTime
	      FROM l_user_exchange_cash e INNER JOIN m_user_info u ON e.user_id=u.user_id INNER JOIN l_coin_change c ON e.coin_change_id=c.id
	      <where>
	        <if test="channel !='baozhu'">
			    <if test="channel != null and channel != '' and userRelation==1">
				    and (u.channel_code=#{channel} OR u.parent_channel_code=#{channel})
				</if>
				<if test="channel != null and channel != '' and userRelation==2">
				    and u.channel_code=#{channel}
				</if>
				<if test="channel != null and channel != '' and userRelation==3">
				    and u.channel_code='' and u.parent_channel_code=#{channel}
				</if>
		    </if>
	        <if test="userId != null and userId != ''">
				and e.user_id  = #{userId}			
			</if>
			<if test="accountId != null and accountId != ''">
				and u.account_id  = #{accountId}			
			</if>
			<if test="outTradeNo != null and outTradeNo != ''">
				and e.out_trade_no  = #{outTradeNo}			
			</if>
			<if test="state != null and state != ''">
				and e.state  = #{state}				
			</if>
			<if test="bankNum != null and bankNum != ''">
				and (((u.ali_num  = #{bankNum} OR u.open_id=#{bankNum}) AND IFNULL(e.bank_account,0)=0) OR e.bank_account=#{bankNum})			
			</if>
			<if test="realName != null and realName != ''">
				and (IFNULL(e.real_name,0)=0 AND u.user_name=#{realName}) OR e.real_name=#{realName}
			</if>
			
			<if test="examineStartTime != null and examineStartTime != ''">
				and e.examine_time>=#{examineStartTime}				
			</if>
			<if test="examineEndTime != null and examineEndTime != ''">
				and #{examineEndTime}>=e.examine_time				
			</if>
			<if test="coinMin != null and coinMin != ''">
				and e.actual_amount>=#{coinMin}				
			</if>
			<if test="coinMax != null and coinMax != ''">
				and #{coinMax}>=e.actual_amount				
			</if>
			<if test="isLocking != null and isLocking != ''">
				and e.is_locking=#{isLocking}				
			</if>
			<if test="startTime != null and startTime != ''">
				and e.creator_time>=#{startTime}				
			</if>
			<if test="endTime != null and endTime != ''">
				and #{endTime}>=e.creator_time				
			</if>
			<if test="channelCode !=null and channelCode != ''">
			    and (u.channel_code = #{channelCode} OR u.parent_channel_code = #{channelCode})
			</if>
			<if test="days !=null and days != ''">
			    and e.id in (
				    SELECT id
					FROM l_user_exchange_cash
					WHERE state=2 AND DATEDIFF(FROM_UNIXTIME(creator_time/1000,'%Y-%m-%d'),FROM_UNIXTIME(u.create_time/1000,'%Y-%m-%d'))+1=#{days}
					GROUP BY user_id
					HAVING MIN(creator_time)
			    )
			</if>
 	      </where>
 	      order by e.creator_time desc 
		  limit #{pageIndex},#{pageSize}
	</select>
	
	<select id="selectSum" parameterType="LUserExchangeCash" resultType="map">
	      SELECT SUM(actual_amount) subTotalPrice,COUNT(*) AS pageCount 
          FROM (SELECT e.actual_amount,e.state
          FROM l_user_exchange_cash e INNER JOIN m_user_info u ON e.user_id=u.user_id INNER JOIN l_coin_change c ON e.coin_change_id=c.id
	      <where>
	        <if test="channel !='baozhu'">
			    <if test="channel != null and channel != '' and userRelation==1">
				    and (u.channel_code=#{channel} OR u.parent_channel_code=#{channel})
				</if>
				<if test="channel != null and channel != '' and userRelation==2">
				    and u.channel_code=#{channel}
				</if>
				<if test="channel != null and channel != '' and userRelation==3">
				    and u.channel_code='' and u.parent_channel_code=#{channel}
				</if>
		    </if>
	        <if test="userId != null and userId != ''">
				and e.user_id  = #{userId}			
			</if>
			<if test="accountId != null and accountId != ''">
				and u.account_id  = #{accountId}			
			</if>
			<if test="outTradeNo != null and outTradeNo != ''">
				and e.out_trade_no  = #{outTradeNo}			
			</if>
			<if test="state != null and state != ''">
				and e.state  = #{state}				
			</if>
			<if test="bankNum != null and bankNum != ''">
				and (((u.ali_num  = #{bankNum} OR u.open_id=#{bankNum}) AND IFNULL(e.bank_account,0)=0) OR e.bank_account=#{bankNum})			
			</if>
			<if test="realName != null and realName != ''">
				and (IFNULL(e.real_name,0)=0 AND u.user_name=#{realName}) OR e.real_name=#{realName}
			</if>
			<if test="examineStartTime != null and examineStartTime != ''">
				and e.examine_time>=#{examineStartTime}				
			</if>
			<if test="examineEndTime != null and examineEndTime != ''">
				and #{examineEndTime}>=e.examine_time				
			</if>
			<if test="coinMin != null and coinMin != ''">
				and e.actual_amount>=#{coinMin}				
			</if>
			<if test="coinMax != null and coinMax != ''">
				and #{coinMax}>=e.actual_amount				
			</if>
			<if test="isLocking != null and isLocking != ''">
				and e.is_locking=#{isLocking}				
			</if>
			<if test="startTime != null and startTime != ''">
				and e.creator_time>=#{startTime}				
			</if>
			<if test="endTime != null and endTime != ''">
				and #{endTime}>=e.creator_time				
			</if>
			<if test="channelCode !=null and channelCode != ''">
			    and (u.channel_code = #{channelCode} OR u.parent_channel_code = #{channelCode})
			</if>
			<if test="days !=null and days != ''">
			    and e.id in (
				    SELECT id
					FROM l_user_exchange_cash
					WHERE state=2 AND DATEDIFF(FROM_UNIXTIME(creator_time/1000,'%Y-%m-%d'),FROM_UNIXTIME(u.create_time/1000,'%Y-%m-%d'))+1=#{days}
					GROUP BY user_id
					HAVING MIN(creator_time)
			    )
			</if>
 	      </where>
 	      ORDER BY e.creator_time DESC 
	      LIMIT #{pageIndex},#{pageSize} 
	      ) a
	      WHERE state=2
	</select>
	
	<select id="selecCountPrice" parameterType="LUserExchangeCash" resultType="map">
	      SELECT SUM(actual_amount) totalPrice,COUNT(*) AS cou 
          FROM (  SELECT e.actual_amount,e.state
		          FROM l_user_exchange_cash e INNER JOIN m_user_info u ON e.user_id=u.user_id INNER JOIN l_coin_change c ON e.coin_change_id=c.id
			      <where>
			        <if test="channel !='baozhu'">
					    <if test="channel != null and channel != '' and userRelation==1">
						    and (u.channel_code=#{channel} OR u.parent_channel_code=#{channel})
						</if>
						<if test="channel != null and channel != '' and userRelation==2">
						    and u.channel_code=#{channel}
						</if>
						<if test="channel != null and channel != '' and userRelation==3">
						    and u.channel_code='' and u.parent_channel_code=#{channel}
						</if>
				    </if>
			         <if test="userId != null and userId != ''">
						and e.user_id  = #{userId}			
					</if>
					<if test="accountId != null and accountId != ''">
						and u.account_id  = #{accountId}			
					</if>
					<if test="outTradeNo != null and outTradeNo != ''">
						and e.out_trade_no  = #{outTradeNo}			
					</if>
					<if test="state != null and state != ''">
						and e.state  = #{state}				
					</if>
					<if test="bankNum != null and bankNum != ''">
				        and (((u.ali_num  = #{bankNum} OR u.open_id=#{bankNum}) AND IFNULL(e.bank_account,0)=0) OR e.bank_account=#{bankNum})			
					</if>
					<if test="realName != null and realName != ''">
						and (IFNULL(e.real_name,0)=0 AND u.user_name=#{realName}) OR e.real_name=#{realName}
					</if>
					<if test="examineStartTime != null and examineStartTime != ''">
						and e.examine_time>=#{examineStartTime}				
					</if>
					<if test="examineEndTime != null and examineEndTime != ''">
						and #{examineEndTime}>=e.examine_time				
					</if>
					<if test="coinMin != null and coinMin != ''">
						and e.actual_amount>=#{coinMin}				
					</if>
					<if test="coinMax != null and coinMax != ''">
						and #{coinMax}>=e.actual_amount				
					</if>
					<if test="isLocking != null and isLocking != ''">
						and e.is_locking=#{isLocking}				
					</if>
					<if test="startTime != null and startTime != ''">
						and e.creator_time>=#{startTime}				
					</if>
					<if test="endTime != null and endTime != ''">
						and #{endTime}>=e.creator_time				
					</if>
					<if test="channelCode !=null and channelCode != ''">
					    and (u.channel_code = #{channelCode} OR u.parent_channel_code = #{channelCode})
					</if>
					<if test="days !=null and days != ''">
					    and e.id in (
						    SELECT id
							FROM l_user_exchange_cash
							WHERE state=2 AND DATEDIFF(FROM_UNIXTIME(creator_time/1000,'%Y-%m-%d'),FROM_UNIXTIME(u.create_time/1000,'%Y-%m-%d'))+1=#{days}
							GROUP BY user_id
							HAVING MIN(creator_time)
					    )
					</if>
		 	      </where>
		 	      ORDER BY e.creator_time DESC 
			      ) a
			WHERE state=2
	</select>
	
	<select id="selectCount" parameterType="LUserExchangeCash" resultType="map">
	      SELECT count(*) as cou,sum(actual_amount) totalPrice
	      FROM l_user_exchange_cash e INNER JOIN m_user_info u ON e.user_id=u.user_id INNER JOIN l_coin_change c ON e.coin_change_id=c.id
	      <where>
	       <if test="channel !='baozhu'">
			    <if test="channel != null and channel != '' and userRelation==1">
				    and (u.channel_code=#{channel} OR u.parent_channel_code=#{channel})
				</if>
				<if test="channel != null and channel != '' and userRelation==2">
				    and u.channel_code=#{channel}
				</if>
				<if test="channel != null and channel != '' and userRelation==3">
				    and u.channel_code='' and u.parent_channel_code=#{channel}
				</if>
		    </if>
	         <if test="userId != null and userId != ''">
				and e.user_id  = #{userId}			
			</if>
			<if test="accountId != null and accountId != ''">
				and u.account_id  = #{accountId}			
			</if>
			<if test="outTradeNo != null and outTradeNo != ''">
				and e.out_trade_no  = #{outTradeNo}			
			</if>
			<if test="state != null and state != ''">
				and e.state  = #{state}				
			</if>
			<if test="bankNum != null and bankNum != ''">
				and (((u.ali_num  = #{bankNum} OR u.open_id=#{bankNum}) AND IFNULL(e.bank_account,0)=0) OR e.bank_account=#{bankNum})			
			</if>
			<if test="realName != null and realName != ''">
				and (IFNULL(e.real_name,0)=0 AND u.user_name=#{realName}) OR e.real_name=#{realName}
			</if>
			<if test="examineStartTime != null and examineStartTime != ''">
				and e.examine_time>=#{examineStartTime}				
			</if>
			<if test="examineEndTime != null and examineEndTime != ''">
				and #{examineEndTime}>=e.examine_time				
			</if>
			<if test="coinMin != null and coinMin != ''">
				and e.actual_amount>=#{coinMin}				
			</if>
			<if test="coinMax != null and coinMax != ''">
				and #{coinMax}>=e.actual_amount				
			</if>
			<if test="isLocking != null and isLocking != ''">
				and e.is_locking=#{isLocking}				
			</if>
			<if test="startTime != null and startTime != ''">
				and e.creator_time>=#{startTime}				
			</if>
			<if test="endTime != null and endTime != ''">
				and #{endTime}>=e.creator_time				
			</if>
			<if test="channelCode !=null and channelCode != ''">
			    and (u.channel_code = #{channelCode} OR u.parent_channel_code = #{channelCode})
			</if>
			<if test="days !=null and days != ''">
			    and e.id in (
				    SELECT id
					FROM l_user_exchange_cash
					WHERE state=2 AND DATEDIFF(FROM_UNIXTIME(creator_time/1000,'%Y-%m-%d'),FROM_UNIXTIME(u.create_time/1000,'%Y-%m-%d'))+1=#{days}
					GROUP BY user_id
					HAVING MIN(creator_time)
			    )
			</if>
 	      </where>
	</select>
	
	<update id="updateLocking" parameterType="LUserExchangeCash">
	    update l_user_exchange_cash
	    <set>
			<if test="lockingMobile != null">
				locking_mobile  = #{lockingMobile},				
			</if>
			<if test="isLocking != null">
				is_locking  = #{isLocking}			
			</if>
		</set>
		where id=#{id}
	</update>
	
	<update id="updateLockingList" parameterType="java.util.List">
		 <foreach collection="list" item="item" index= "index" open="" close="" separator =";">
             update l_user_exchange_cash
             <set>
                locking_mobile  = #{item.lockingMobile},
                is_locking  = 1
             </set>
             <where>
                id=#{item.id}
             </where>
         </foreach>
	</update>
	
	<select id="selectOne" parameterType="int" resultMap="BaseResultMap">
	   select *
	   from l_user_exchange_cash
	   where id=#{id}
	</select>
	
	<select id="selectInfo" parameterType="int" resultMap="BaseResultMap">
	   SELECT e.*,u.user_name,
       CASE c.account_type
       WHEN 1 THEN '微信'
       WHEN 2 THEN '支付宝'
       END bankName,
       CASE c.account_type
       WHEN 1 THEN u.open_id
       WHEN 2 THEN u.ali_num
       END bankNum
       FROM l_user_exchange_cash e INNER JOIN m_user_info u ON e.user_id=u.user_id INNER JOIN l_coin_change c ON e.coin_change_id=c.id
       where e.id=#{id}
	</select>
	
	<select id="selectExcl" parameterType="LUserExchangeCash" resultMap="BaseResultMap">
	   SELECT e.*,u.user_name,u.channel_code,u.account_id,u.coin AS coinBalance,
       CASE c.account_type
       WHEN 1 THEN '微信'
       WHEN 2 THEN '支付宝'
       END bankName,
       CASE c.account_type
       WHEN 1 THEN u.open_id
       WHEN 2 THEN u.ali_num
       END bankNum,
       CASE e.operator_mobile
       WHEN 1 THEN '系统'
       ELSE (SELECT realname FROM p_admin WHERE mobile=e.operator_mobile)
       END operatorName,
       CASE e.state
       WHEN 1 THEN '审核中'
       WHEN 2 THEN '提现成功'
       WHEN 3 THEN '提现失败'
       WHEN 4 THEN '提现异常'
       END stateName,
       FROM_UNIXTIME(e.creator_time/1000,'%Y-%m-%d %H:%i:%s') AS creatorDate,
       FROM_UNIXTIME(e.examine_time/1000,'%Y-%m-%d %H:%i:%s') AS examineDate,
       FROM_UNIXTIME(u.create_time/1000,'%Y-%m-%d %H:%i:%s') AS registerDate
       FROM l_user_exchange_cash e INNER JOIN m_user_info u ON e.user_id=u.user_id INNER JOIN l_coin_change c ON e.coin_change_id=c.id
	      <where>
	        <if test="channel !='baozhu'">
			    <if test="channel != null and channel != '' and userRelation==1">
				    and (u.channel_code=#{channel} OR u.parent_channel_code=#{channel})
				</if>
				<if test="channel != null and channel != '' and userRelation==2">
				    and u.channel_code=#{channel}
				</if>
				<if test="channel != null and channel != '' and userRelation==3">
				    and u.channel_code='' and u.parent_channel_code=#{channel}
				</if>
		    </if>
	        <if test="userId != null and userId != ''">
				and e.user_id  = #{userId}			
			</if>
			<if test="accountId != null and accountId != ''">
				and u.account_id  = #{accountId}			
			</if>
			<if test="outTradeNo != null and outTradeNo != ''">
				and e.out_trade_no  = #{outTradeNo}			
			</if>
			<if test="state != null and state != ''">
				and e.state  = #{state}				
			</if>
			<if test="bankNum != null and bankNum != ''">
				and (((u.ali_num  = #{bankNum} OR u.open_id=#{bankNum}) AND IFNULL(e.bank_account,0)=0) OR e.bank_account=#{bankNum})			
			</if>
			<if test="realName != null and realName != ''">
				and (IFNULL(e.real_name,0)=0 AND u.user_name=#{realName}) OR e.real_name=#{realName}
			</if>
			<if test="examineStartTime != null and examineStartTime != ''">
				and e.examine_time>=#{examineStartTime}				
			</if>
			<if test="examineEndTime != null and examineEndTime != ''">
				and #{examineEndTime}>=e.examine_time				
			</if>
			<if test="coinMin != null and coinMin != ''">
				and e.actual_amount>=#{coinMin}				
			</if>
			<if test="coinMax != null and coinMax != ''">
				and #{coinMax}>=e.actual_amount				
			</if>
			<if test="isLocking != null and isLocking != ''">
				and e.is_locking=#{isLocking}				
			</if>
			<if test="startTime != null and startTime != ''">
				and e.creator_time>=#{startTime}				
			</if>
			<if test="endTime != null and endTime != ''">
				and #{endTime}>=e.creator_time				
			</if>
			<if test="channelCode !=null and channelCode != ''">
			    and (u.channel_code = #{channelCode} OR u.parent_channel_code = #{channelCode})
			</if>
			<if test="days !=null and days != ''">
			    and e.id in (
				    SELECT id
					FROM l_user_exchange_cash
					WHERE state=2 AND DATEDIFF(FROM_UNIXTIME(creator_time/1000,'%Y-%m-%d'),FROM_UNIXTIME(u.create_time/1000,'%Y-%m-%d'))+1=#{days}
					GROUP BY user_id
					HAVING MIN(creator_time)
			    )
			</if>
 	      </where>
 	      order by e.examine_time desc
 	      limit 0,5000 
	</select>
	
	<select id="selectCountUser" parameterType="String" resultType="int">
	    SELECT COUNT(*)
		FROM l_user_exchange_cash
		WHERE state in (1,2) AND FROM_UNIXTIME(creator_time/1000,'%Y-%m-%d')=CURDATE() and cash_type=1 and user_id=#{userId}
	</select>
	
	<select id="selectH5List" parameterType="LUserExchangeCash" resultType="map">
	    SELECT state,creator_time AS creatorTime,actual_amount AS actualAmount,cash_type AS cashType,remarks
		FROM l_user_exchange_cash
		WHERE user_id=#{userId}
		ORDER BY creator_time DESC
		LIMIT #{pageIndex},#{pageSize} 
	</select>
	<select id="selectH5Count" parameterType="LUserExchangeCash" resultType="int">
	    SELECT count(1)
		FROM l_user_exchange_cash
		WHERE user_id=#{userId}
	</select>
	
	<select id="selectSumMoney" parameterType="String" resultType="long">
	    SELECT IFNULL(sum(actual_amount),0)
		FROM l_user_exchange_cash
		WHERE user_id=#{userId} and state in (1,2,4)
	</select>
	
	<select id="selectCashGame" parameterType="LuserCashGameStatistic" resultType="Map">
	    SELECT e.out_trade_no AS outTradeNo,u.account_id AS accountId,u.channel_code AS channelCode,u.equipment_type AS equipmentType,e.actual_amount AS actualAmount,
		c.account_type AS accountType,e.real_name AS realName,IFNULL(s.one_game,0) AS oneGame,IFNULL(s.two_game,0) AS twoGame,s.total_game AS totalGame,u.create_time AS createTime,
		e.creator_time AS cashTime,e.examine_time AS examineTime,e.state
		FROM l_user_exchange_cash e INNER JOIN m_user_info u ON e.user_id=u.user_id INNER JOIN l_coin_change c ON e.coin_change_id=c.id INNER JOIN l_user_statistic s ON e.user_id=s.user_id
        <where>
           <if test="channel !='baozhu'">
			    <if test="channel != null and channel != '' and userRelation==1">
				    and (u.channel_code=#{channel} OR u.parent_channel_code=#{channel})
				</if>
				<if test="channel != null and channel != '' and userRelation==2">
				    and u.channel_code=#{channel}
				</if>
				<if test="channel != null and channel != '' and userRelation==3">
				    and u.channel_code='' and u.parent_channel_code=#{channel}
				</if>
		    </if>
		    <if test="channelCode != null and channelCode != ''">
				and (u.channel_code = #{channelCode} OR u.parent_channel_code = #{channelCode})			
			</if>
			
            <if test="accountId != null and accountId != ''">
				and u.account_id=#{accountId}				
			</if>
			<if test="moneyMin != null and moneyMin != ''">
				and e.actual_amount>=#{moneyMin}				
			</if>
			<if test="moneyMax != null and moneyMax != ''">
				and #{moneyMax}>=e.actual_amount				
			</if>
			<if test="gameMin != null and gameMin != ''">
				and s.one_game>=#{gameMin}				
			</if>
			<if test="gameMax != null and gameMax != ''">
				and #{gameMax}>=s.one_game				
			</if>
			<if test="startRegisterTime != null and startRegisterTime != ''">
				and u.create_time>=#{startRegisterTime}				
			</if>
			<if test="endRegisterTime != null and endRegisterTime != ''">
				and #{endRegisterTime}>=u.create_time				
			</if>
			<if test="state != null and state != ''">
				and e.state=#{state}				
			</if>
        </where>
        order by e.creator_time desc
        LIMIT #{pageIndex},#{pageSize} 
	</select>
	
	<select id="selectCashGameCount" parameterType="LuserCashGameStatistic" resultType="int">
	    SELECT count(1)
		FROM l_user_exchange_cash e INNER JOIN m_user_info u ON e.user_id=u.user_id INNER JOIN l_coin_change c ON e.coin_change_id=c.id INNER JOIN l_user_statistic s ON e.user_id=s.user_id
        <where>
            <if test="channel !='baozhu'">
			    <if test="channel != null and channel != '' and userRelation==1">
				    and (u.channel_code=#{channel} OR u.parent_channel_code=#{channel})
				</if>
				<if test="channel != null and channel != '' and userRelation==2">
				    and u.channel_code=#{channel}
				</if>
				<if test="channel != null and channel != '' and userRelation==3">
				    and u.channel_code='' and u.parent_channel_code=#{channel}
				</if>
		    </if>
		    <if test="channelCode != null and channelCode != ''">
				and (u.channel_code = #{channelCode} OR u.parent_channel_code = #{channelCode})			
			</if>
        
            <if test="accountId != null and accountId != ''">
				and u.account_id=#{accountId}				
			</if>
			<if test="moneyMin != null and moneyMin != ''">
				and e.actual_amount>=#{moneyMin}				
			</if>
			<if test="moneyMax != null and moneyMax != ''">
				and #{moneyMax}>=e.actual_amount				
			</if>
			<if test="gameMin != null and gameMin != ''">
				and s.one_game>=#{gameMin}				
			</if>
			<if test="gameMax != null and gameMax != ''">
				and #{gameMax}>=s.one_game				
			</if>
			<if test="startRegisterTime != null and startRegisterTime != ''">
				and u.create_time>=#{startRegisterTime}				
			</if>
			<if test="endRegisterTime != null and endRegisterTime != ''">
				and #{endRegisterTime}>=u.create_time				
			</if>
			<if test="state != null and state != ''">
				and e.state=#{state}				
			</if>
        </where>
	</select>
	
	<select id="selectCashGameExcl" parameterType="LuserCashGameStatistic" resultType="Map">
	    SELECT e.out_trade_no AS outTradeNo,u.account_id AS accountId,u.channel_code AS channelCode,
		CASE u.equipment_type
		WHEN 1 THEN '安卓'
		WHEN 2 THEN 'ios'
		END equipmentType,
		e.actual_amount AS actualAmount,
		c.account_type AS accountType,e.real_name AS realName,IFNULL(s.one_game,0) AS oneGame,IFNULL(s.two_game,0) AS twoGame,s.total_game AS totalGame,
		FROM_UNIXTIME(u.create_time/1000,'%Y-%m-%d %H:%i:%s') AS createTime,
		FROM_UNIXTIME(e.creator_time/1000,'%Y-%m-%d %H:%i:%s') AS cashTime,
		FROM_UNIXTIME(e.examine_time/1000,'%Y-%m-%d %H:%i:%s') AS examineTime,
		CASE e.state
		WHEN 1 THEN '审核中'
		WHEN 2 THEN '提现成功'
		WHEN 3 THEN '提现失败'
		WHEN 4 THEN '提现异常'
		WHEN 5 THEN '提现通过'
		END state
		FROM l_user_exchange_cash e INNER JOIN m_user_info u ON e.user_id=u.user_id INNER JOIN l_coin_change c ON e.coin_change_id=c.id INNER JOIN l_user_statistic s ON e.user_id=s.user_id
        <where>
           <if test="channel !='baozhu'">
			    <if test="channel != null and channel != '' and userRelation==1">
				    and (u.channel_code=#{channel} OR u.parent_channel_code=#{channel})
				</if>
				<if test="channel != null and channel != '' and userRelation==2">
				    and u.channel_code=#{channel}
				</if>
				<if test="channel != null and channel != '' and userRelation==3">
				    and u.channel_code='' and u.parent_channel_code=#{channel}
				</if>
		    </if>
		    <if test="channelCode != null and channelCode != ''">
				and (u.channel_code = #{channelCode} OR u.parent_channel_code = #{channelCode})			
			</if>
			
            <if test="accountId != null and accountId != ''">
				and u.account_id=#{accountId}				
			</if>
			<if test="moneyMin != null and moneyMin != ''">
				and e.actual_amount>=#{moneyMin}				
			</if>
			<if test="moneyMax != null and moneyMax != ''">
				and #{moneyMax}>=e.actual_amount				
			</if>
			<if test="gameMin != null and gameMin != ''">
				and s.one_game>=#{gameMin}				
			</if>
			<if test="gameMax != null and gameMax != ''">
				and #{gameMax}>=s.one_game				
			</if>
			<if test="startRegisterTime != null and startRegisterTime != ''">
				and u.create_time>=#{startRegisterTime}				
			</if>
			<if test="endRegisterTime != null and endRegisterTime != ''">
				and #{endRegisterTime}>=u.create_time				
			</if>
			<if test="state != null and state != ''">
				and e.state=#{state}				
			</if>
        </where>
        order by e.creator_time desc
        LIMIT #{pageIndex},#{pageSize} 
	</select>
	
	<select id="selectUsetDayCash" parameterType="String" resultType="Double">
	    SELECT IFNULL(SUM(actual_amount),0)
		FROM l_user_exchange_cash
		WHERE user_id=#{userId} AND FROM_UNIXTIME(creator_time/1000,'%Y-%m-%d')=CURDATE() AND state!=3
	</select>
	
	<select id="selectTradeCount" parameterType="String" resultType="int">
	    select count(1)
	    from l_user_exchange_cash
	    where out_trade_no=#{outTradeNo} and state in (1,2,4)
	</select>
	
	<select id="selectActualAmount" resultType="int">
	    select count(1)
	    from l_user_exchange_cash
	    where user_id=#{userId} and actual_amount=#{actualAmount} and state in (1,2,4)
	</select>
</mapper>